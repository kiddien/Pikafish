name: Pikafish

on:
  push:
    branches:
      - jieqi
jobs:
  Pikafish-x86-64:
    name: ${{ matrix.config.name }}${{ matrix.arch }}
    runs-on: ${{ matrix.config.os }}
    env:
      ARCH: x86-64${{ matrix.arch }}
      COMPCXX: clang++
      COMP: clang
      EXE: pikafish${{ matrix.arch }}${{ matrix.config.ext }}
      SDE: ${{ matrix.config.sde }}
    strategy:
      matrix:
        config:
          - name: Linux
            os: ubuntu-22.04 
            shell: bash
            sde: /home/runner/work/Pikafish/Pikafish/.output/sde-temp-files/sde-external-9.33.0-2024-01-07-lin/sde -future --
          - name: Windows
            os: windows-latest
            shell: msys2 {0}
            ext: .exe
            sde: /d/a/Pikafish/Pikafish/.output/sde-temp-files/sde-external-9.33.0-2024-01-07-win/sde.exe -future --
        arch: ["-avx512", "-avx2", "-sse41-popcnt"]
    defaults:
      run:
        working-directory: src
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v4

      - name: Install LLVM and Clang
        if: runner.os == 'Linux'
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod u+x llvm.sh
          echo | sudo ./llvm.sh 20
          rm llvm.sh
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-20 100
          sudo update-alternatives --install /usr/bin/llvm-profdata llvm-profdata /usr/bin/llvm-profdata-20 100
          sudo update-alternatives --set clang++ /usr/bin/clang++-20
          sudo update-alternatives --set llvm-profdata /usr/bin/llvm-profdata-20

      - name: Setup msys and install required packages
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: clang64
          install: mingw-w64-clang-x86_64-clang make git expect

      - name: Download SDE package
        if: "!(matrix.arch == '-bmi2' || matrix.arch == '-avx2' || matrix.arch == '-sse41-popcnt')"
        uses: petarpetrovt/setup-sde@v2.4
        with:
          environmentVariableName: SDE_DIR
          sdeVersion: 9.33.0

      - name: Compile ${{ matrix.arch }} build
        run: |
          if [[ "${{ matrix.arch }}" == "-bmi2" || "${{ matrix.arch }}" == "-avx2" || "${{ matrix.arch }}" == "-sse41-popcnt" ]]; then
            SDE=""
          fi
          make -j profile-build EXE=$EXE WINE_PATH="$SDE"
          make strip EXE=$EXE
          cp $EXE ../

      - name: Download wiki
        run: |
          git clone https://github.com/official-pikafish/Pikafish.wiki.git ../Wiki
          cd ../Wiki
          rm -rf .git

      # Artifacts automatically get zipped.
      # To avoid double-zipping, we use the unzipped directory
      - uses: actions/upload-artifact@v4
        with:	
          name: Pikafish-${{ matrix.config.name }}${{ matrix.arch }}
          path: |
            ${{ env.EXE }}
            Wiki
            AUTHORS
            CONTRIBUTING.md
            Copying.txt
            README.md
            Top CPU Contributors.txt
